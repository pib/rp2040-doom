{
  "name": "@<scope>/rp2040-doom",
  "version": "0.1.0",
  "description": "A source xPack with <your-description-here>",
  "main": "",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/<user-id>/rp2040-doom.git"
  },
  "homepage": "https://github.com/<user-id>/rp2040-doom/",
  "bugs": {
    "url": "https://github.com/<user-id>/rp2040-doom/issues/"
  },
  "keywords": [
    "xpack"
  ],
  "author": {
    "name": "<author-name>",
    "email": "<author-email>",
    "url": "<author-url>"
  },
  "license": "MIT",
  "config": {},
  "dependencies": {},
  "devDependencies": {},
  "xpack": {
    "minimumXpmRequired": "0.15.0",
    "dependencies": {},
    "devDependencies": {
      "@xpack-dev-tools/arm-none-eabi-gcc": "12.2.1-1.2.1",
      "@xpack-dev-tools/cmake": "3.23.5-1.1"
    },
    "properties": {
      "buildFolderRelativePath": "build{% if os.platform == 'win32' %}\\{% else %}/{% endif %}{{ configuration.name | downcase }}",
      "commandPrepare": "cmake -S . -B {{ properties.buildFolderRelativePath }} -DCMAKE_BUILD_TYPE={{ properties.buildType }} -DPICO_BOARD={{ properties.board }} -DPICO_SDK_PATH=~/git/pico-sdk -DPICO_EXTRAS_PATH=~/git/pico-extras -DCMAKE_EXPORT_COMPILE_COMMANDS=ON",
      "commandBuild": "cmake --build {{ properties.buildFolderRelativePath }} --target {{ configuration.name }}",
      "commandClean": "cmake --build {{ properties.buildFolderRelativePath }} --target clean"
    },
    "actions": {},
    "buildConfigurations": {
      "doom_tiny": {
        "properties": {
          "buildType": "MinSizeRel",
          "board": "vgaboard"
        },
        "actions": {
          "prepare": "{{ properties.commandPrepare }}",
          "build": [
            "{{ properties.commandPrepare }}",
            "{{ properties.commandBuild }}"
          ],
          "clean": "{{ properties.commandClean }}"
        }
      },
      "doom_tiny_lcd": {
        "properties": {
          "buildType": "MinSizeRel",
          "board": "vgaboard"
        },
        "actions": {
          "prepare": "{{ properties.commandPrepare }}",
          "build": [
            "{{ properties.commandPrepare }}",
            "{{ properties.commandBuild }}"
          ],
          "clean": "{{ properties.commandClean }}"
        }
      }
    }
  }
}
